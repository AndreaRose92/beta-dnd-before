c
SpellLevel.find_by(dnd_class_level: dc.dnd_class_levels.find_by(level: params[:level]))
SpellLevel.find_by(dnd_class_level: dc.dnd_class_level.find_by(level: params[:level]))
SpellLevel.find_by(dnd_class_level: dc.dnd_class_level.find_by(level: params[:level])
dc.dnd_class_levels.find_by(level: params[:level]).spell_levels
dc.dnd_class_levels.find_by(level: params[:level]).spell_level
dc.dnd_class_levels.find_by(level: params[:level])
dc
c
character.max_spell_level
character.spellcasting_level.dnd_class_level.level
character.spellcasting_level.dnd_class_level
character.dnd_class.name
character
c
character.max_spell_level
character.spellcasting_level
character.dnd_class
character
continue
lvl_cap.lvl_7
lvl_cap.lvl_6
lvl_cap.lvl_5
lvl_cap.lvl_4
lvl_cap.lvl_7
lvl_cap.lvl_9
lvl_cap
continue
cantrips.filter{|spell| spell.name != "Vicious Mockery"}.pluck(:name)
cantrips.filter{|spell| spell.name != "Vicious Mockery"}
cantrips.filter(|spell| spell.name != "Vicious Mockery")
cantrips.filter(:name != "Vicious Mockery")
cantrips
continue
all_weapons.first.first
all_weapons[0]
all_weapons
c
spell.instance_values
spell.methods
spell.values
spell.where(|k,v| v != 0)
spell.filter{|k,v| v != 0}
spell = spells.first
spells.pluck(:cantrips_known)
spells.map {|spell| puts spell}
spells.map {|spell| spell.delete_if{ |k,v| v == 0}} 
spells = SpellLevel.where(dnd_class_id: 11)
SpellLevel.where(dnd_class_id: 11)
continue
data["features"].pluck("name").delete_if{ |str| ["Rage", "Spellcasting"].any?(str) }
data["features"].pluck("name").filter{ |str| puts str}
data["features"].pluck("name")
data["features"]
data
continue
char.current_hp
char.hp
char.calculate_hp(params[:hp_option])
char
params[:hp_option]
char_params
continue
hit_die
base_hp
c
params
c
params[:proficiencies].each {|p| CharSkill.create(character_id: 1, proficiency_id: Proficiency.find_by(name: p).id)}
params[:proficiencies].each {|p| CharSkill.create(character_id: 1, proficiency_id: Proficiency.find_by(name: p).id}
params[:proficiencies].each {|p| puts p}
params[:proficiencies]
c
params.permit!
params.permitted?[:proficiencies]
params.permitted?
params[:proficiencies].permitted?
c
params[:proficiencies]
params
c
skill_params
c
skill_params
c
params[:proficienies]
skills
c
params
c
Character.find_by(name: params[:character])
params
c
params
c
params
c
params
c
Race.find_by(name: data["race"]["name"]).id
Race.find_by(name: data["race"]["name"])
data["race"]["name"]
data
exit
c
r
continue
exit
c
data
c
params
c
data
data["ability_score_bonuses"]
prof_bonus
abi
level
c
data["prof_bonus"]
data["ability_score_bonuses"]
data
c
data["ability_score_bonuses"]
data
c
data["ability_score_bonuses"]
data
c
api_url("/features/#{params[:id]}")
api_url("/features/#{params[:id]")
params
c
dndclass.each {|d| puts d["level"]}
dndclass.each {|d| puts d[0]["level"]}
dndclass.each {|d| puts d[0]}
dndclass.each {|d| puts d}
dndclass.record
dndclass.object
self.object
self
c
dndclass[0]["features"][0]["name"]
dndclass[0]["features"]["name"]
dndclass[0]["features"]
dndclass[0][2]
dndclass[0][3]
dndclass[0][3][1]
dndclass[0][3].pluck[1]
dndclass[0]["features"].pluck["name"]
dndclass[0]["features"].pluck[:name]
dndclass[0].features.pluck[:name]
dndclass[0]
dndclass
c
api_url(dnd_class_url)
dnd_class_url
api_url
c
params
c
class_skills[0]["class"].to_i
class_skills[0]["class"]
class_skills[0]
class_skills
c
continue
!!!
~~~
class_skills
c
"#{race_url}/#{params[:id]}"
"#{race_url}"
params[:id].downcase
race_url
c
params
c
data[0]["languages"]
data[0][:name]
data[0]["name"]
data[0]
data
